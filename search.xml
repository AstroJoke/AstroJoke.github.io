<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>洛谷官方题单1题解（超级水题警告）</title>
      <link href="/2020/04/10/luo-gu-ti-dan-shun-xu-jie-gou-ti-jie-chao-ji-shui-jing-gao/"/>
      <url>/2020/04/10/luo-gu-ti-dan-shun-xu-jie-gou-ti-jie-chao-ji-shui-jing-gao/</url>
      
        <content type="html"><![CDATA[<p>最近洛谷直接更新之前的试炼场模式，现在直接就采用题单了，虽然题目多了不少，但是实际上就是把类似于EX之类的放在了一起，虽然题目多，但是感觉在后面可能会导致一个题单难度会存在飞跃。<br>这是第一期水题集锦，我尽量一日到两日更。另外我记得某本书告诉我们，没有循环的题目实际上某种意义上不适合作为计算机程序，这些题基本上都是这种情况。</p><h2 id="题目0：P1001-A-B"><a href="#题目0：P1001-A-B" class="headerlink" title="题目0：P1001 A+B"></a>题目0：P1001 A+B</h2><p>题解花里胡哨过于多，我也不玩那些了。</p><pre><code>    int a,b;    scanf("%d%d",&amp;a,&amp;b);    printf("%d",a+b);</code></pre><h2 id="题目1：P1000"><a href="#题目1：P1000" class="headerlink" title="题目1：P1000"></a>题目1：P1000</h2><p>输入输出题目，复制粘贴即可，略过</p><h2 id="题目2：苹果采购"><a href="#题目2：苹果采购" class="headerlink" title="题目2：苹果采购"></a>题目2：苹果采购</h2><pre><code>    int a,b;    scanf("%d%d",&amp;a,&amp;b);    return 0*printf("%d\n",a*b);</code></pre><h2 id="题目3：大小写转换"><a href="#题目3：大小写转换" class="headerlink" title="题目3：大小写转换"></a>题目3：大小写转换</h2><p>这算是一个技巧了，而且后面字符串也有类似的操作的</p><pre><code>    printf("%c\n",a-'a'+'A');</code></pre><h2 id="题目4：数字反转"><a href="#题目4：数字反转" class="headerlink" title="题目4：数字反转"></a>题目4：数字反转</h2><p>通过string方式反向输出即可，反正不会像一些题一样跑出来前导0。（也可以用栈）</p><pre><code>    string s,ans="";    cin&gt;&gt;s;    int len=s.length();    for(int i=len-1;i&gt;=0;i--) ans+=s[i];    cout&lt;&lt;ans&lt;&lt;endl;</code></pre><h2 id="题目5：再分肥宅水"><a href="#题目5：再分肥宅水" class="headerlink" title="题目5：再分肥宅水"></a>题目5：再分肥宅水</h2><p>注意输出格式<br>这里是3位小数，而且有这种情况下的要求，建议都用printf</p><pre><code>    printf("%.3lf\n%d",t/n,n*2)</code></pre><h2 id="题目6：小鱼游泳时间"><a href="#题目6：小鱼游泳时间" class="headerlink" title="题目6：小鱼游泳时间"></a>题目6：小鱼游泳时间</h2><p>实际上就是种树问题放在时间上，n段路需要n+1的树，这里计算的时候也要注意；<br>然后分钟可以参考补码的计算方式。补码的情况就是在最大的时候变为最小，所以d+60-b</p><pre><code>    int a, b,c ,d,e,f;//这里都是题目上的字母，不再阐述    scanf("%d%d%d%d",&amp;a,&amp;b,&amp;c,&amp;d);    if( d - b &lt; 0 ) e = c - a -1 ,f = d + 60 -b;    else e= c - a, f = d - b;    return 0 * printf("%d %d" , e, f );</code></pre><h2 id="题目7：n合1"><a href="#题目7：n合1" class="headerlink" title="题目7：n合1"></a>题目7：n合1</h2><p>第三题：注意有效数字和小数，cout的方式这样（一般别这么玩）；<br>第五题：行程问题（来自于某小学奥数老师的科普）：相遇问题：路程和=时间×速度和， 火车过桥问题：总路程=车长+桥长，代入公式计算就是15啦<br>第六题：勾股定理（这个大家都不会不知道吧，不会吧不会吧）<br>第九题：这个题就是还原的过程<br>第十题：牛吃草问题（一片草原P，每天增长Q：X牛吃Y天，Z牛吃W天）：在这道题对应之后带进去就可以得到以下方程（我latex还不怎么会用在这里，后期再改）<br>P+30Q=30（即Y）×8（即X）<br>P+6Q=6（即W）×10（即Z）<br>接下来P=15，Q=7.5，即P=P/10（十分钟）+Q=9，即得到了答案（小学生太难了）；<br>第11题：追及问题（依旧来自于某小学奥数老师）：路程变化量：速度变化量=需要的时间</p><pre><code>if (T == 1) {        cout &lt;&lt; "I love Luogu!";    } else if (T == 2) {        cout &lt;&lt; 2 + 4 &lt;&lt; " " &lt;&lt; 10 - 2 - 4;    } else if (T == 3) {        cout&lt;&lt;3&lt;&lt;endl&lt;&lt;12&lt;&lt;endl&lt;&lt;2&lt;&lt;endl;    } else if (T == 4) {        printf("%.3lf\n",500.0/3.0);   //不嫌麻烦可以 cout&lt;&lt;fixed&lt;&lt;setprecision(3)&lt;&lt;1.0*500/3;    } else if (T == 5) {        cout&lt;&lt;15&lt;&lt;endl;    } else if (T == 6) {        cout&lt;&lt;sqrt(6*6+9*9)&lt;&lt;endl;    } else if (T == 7) {        cout&lt;&lt;110&lt;&lt;endl&lt;&lt;90&lt;&lt;endl&lt;&lt;0&lt;&lt;endl;    } else if (T == 8) {        double const pi=3.141593;        double const r=5;        cout&lt;&lt;pi*r*2&lt;&lt;endl&lt;&lt;pi*r*r&lt;&lt;endl&lt;&lt;4.0/3*pi*r*r*r&lt;&lt;endl;    } else if (T == 9) {        cout&lt;&lt;22&lt;&lt;endl;    } else if (T == 10) {        cout&lt;&lt;9&lt;&lt;endl;    } else if (T == 11) {        cout&lt;&lt;100.0/(8-5)&lt;&lt;endl;    } else if (T == 12) {        cout&lt;&lt;13&lt;&lt;endl&lt;&lt;"R"&lt;&lt;endl;    } else if (T == 13) {        double const pi=3.141593;        double V=pi*4*4*4*4/3+pi*10*10*10*4/3;        cout&lt;&lt;floor(pow(V,1.0/3))&lt;&lt;endl;    } else if (T == 14) {        cout&lt;&lt;50&lt;&lt;endl;    }</code></pre><h2 id="题目8：三角形面积"><a href="#题目8：三角形面积" class="headerlink" title="题目8：三角形面积"></a>题目8：三角形面积</h2><p>海伦公式建议加入模板</p><pre><code>    ans=sqrt(p*(p-a)*(p-b)*(p-c));    return 0*printf("%.1lf\n",ans);</code></pre><h2 id="题目9：买铅笔"><a href="#题目9：买铅笔" class="headerlink" title="题目9：买铅笔"></a>题目9：买铅笔</h2><p>这个，转成整数就好了</p><pre><code>  printf("%d",(int)((a*10+b)/19));//a元b角</code></pre><h2 id="题目10：还有几个苹果"><a href="#题目10：还有几个苹果" class="headerlink" title="题目10：还有几个苹果"></a>题目10：还有几个苹果</h2><p>坑有点恶心（也不是恶心，需要考虑下日常），半个不是一个，负数不存在最小为0</p><pre><code>#include&lt;stdio.h&gt;int main(){    int m,t,s,ans;//字母和题目一个要求    scanf("%d%d%d",&amp;m,&amp;t,&amp;s);    if(t==0) return 0*printf("0\n");    ans=m-s/t;    if(ans&lt;0) return 0*printf("0\n");    else{        if(s%t==0) return 0*printf("%d\n",ans);        else return 0*printf("%d\n",ans-1);    } }</code></pre><h2 id="题目11：对角线"><a href="#题目11：对角线" class="headerlink" title="题目11：对角线"></a>题目11：对角线</h2><p>说实话我也不知道这道题怎么（哭哭），所以直接抄了官方的题解，代码如下，于是也加入死记硬背套餐了对于我，后续有正式属于我的题解我会更新（咕咕咕）。</p><pre><code>    ans=n*(n-1)/2*(n-2)/3*(n-3)/4;    return 0*printf("%lld\n",ans);</code></pre><p>以上结束。（评论区我还没搞出来23333，虽然我觉得也人会回复我的弱智水题）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 编程算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新的开始</title>
      <link href="/2020/04/07/article-title/"/>
      <url>/2020/04/07/article-title/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到我的blog，这是我的第一篇博客，这里进行下自己的规划以及本博客主要分享的东西。</p><h2 id="接下来对自己的规划"><a href="#接下来对自己的规划" class="headerlink" title="接下来对自己的规划"></a>接下来对自己的规划</h2><h3 id="数学方面"><a href="#数学方面" class="headerlink" title="数学方面"></a>数学方面</h3><p>自己的数学还是太差了些，由于自己想要走计算机图形学，因此打算主要学习一下的东西：</p><ol><li>数学分析：作为其他数学学科的基础，而且由于我考研只考了数学二，对数学一中的空间解析几何，曲线曲面积分，旋度梯度啥的都需要认真“复习”一次，也会分享在这个博客中；</li><li>线性代数：线性代数在计算机中实在是过于重要，所以我需要系统的不站在考试角度上学习一次线性代数；</li><li>概率和统计：这个还是需要好好复习一遍的，计算机中概率和统计在相当多的方向中有着重要的左右；</li><li>拓扑学，微分几何等之类的更难的课程。</li></ol><h3 id="计算机方面"><a href="#计算机方面" class="headerlink" title="计算机方面"></a>计算机方面</h3><p>计算机的相关知识也会放在这里，主要有：</p><ol><li>算法题：虽然是个跨考，但是我还是会经常刷算法题练练脑子，当然前期的情况下我可能会放一些水题，后期会删掉，同时会有自己关于算法的学习过程；</li><li>408四门基础课：大家都懂；</li><li>数据库：属于一个计算机工程师必须的理论基础；</li><li>计算机图形学相关内容和文献阅读读后感：毕竟想走的方向在这里。<br>以上的学习内容后期也会逐渐丰富起来，这毕竟只是自己的第一个文章。</li></ol><h3 id="blog优化方面"><a href="#blog优化方面" class="headerlink" title="blog优化方面"></a>blog优化方面</h3><p>现在用的是一个开源的theme，后期还是会进行更多的更改甚至更换，主要是很多bug现在的我无法解决，并且也牵扯到一些底层的问题，后期再慢慢改（画）。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
